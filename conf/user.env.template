# user.env.template - Template for user environment variables
# Copy this file to user.env and customize as needed
# Part of Milestones 1-10

# =============================================================================
# SYSTEM CONFIGURATION
# =============================================================================
# System timezone for server operations
SERVER_TIMEZONE="Asia/Hong_Kong"
# Log level for debugging (DEBUG, INFO, WARNING, ERROR)
LOG_LEVEL="INFO"
# Whether to update system packages during initialization
SYSTEM_UPDATE=true
# Whether to run tests after installation
RUN_TESTS=true
# Whether to use Let's Encrypt production environment (false uses staging for testing)
PRODUCTION=false

# =============================================================================
# SECURITY & FIREWALL
# =============================================================================
# Enable automatic firewall configuration
ENABLE_FIREWALL=true
CONFIGURE_FIREWALL=true

# =============================================================================
# POSTGRESQL CORE CONFIGURATION
# =============================================================================
# IMPORTANT: Change this password to a secure value
PG_SUPERUSER_PASSWORD="secure-password-here"
# Database name to create (default is postgres)
PG_DATABASE="your_database_name"
# PostgreSQL port (default is 5432)
DB_PORT=5432
# Enable SSL for PostgreSQL connections
PG_ENABLE_SSL=true
# Enable pgvector extension (for vector similarity search)
PG_ENABLE_PGVECTOR=true
# pgvector dimension setting (default vector dimension)
PGVECTOR_DEFAULT_DIM=1536

# =============================================================================
# PGBOUNCER CONFIGURATION
# =============================================================================
# Port pgbouncer listens on for connections
PGB_LISTEN_PORT=6432
# Address pgbouncer listens on (* for all interfaces)
PGB_LISTEN_ADDR="*"
# Authentication type (scram-sha-256 is recommended for security)
PGB_AUTH_TYPE="scram-sha-256"
# Pool mode (transaction, session, or statement)
PGB_POOL_MODE="transaction"
# Maximum number of client connections
PGB_MAX_CLIENT_CONN=100
# Default pool size per user/database
PGB_DEFAULT_POOL_SIZE=20
# Startup parameters to ignore (separate with commas if multiple)
PGB_IGNORE_PARAMS="extra_float_digits"

# =============================================================================
# NGINX & SSL CONFIGURATION
# =============================================================================
# Domain name for SSL certificate and subdomain mapping
# Set to your actual domain to enable subdomain-to-database mapping
NGINX_DOMAIN="example.com"
# Email address for SSL certificate notifications
SSL_EMAIL="admin@example.com"
# Enable/disable automatic SSL certificate renewal
SSL_AUTO_RENEWAL=true
# Email to receive SSL certificate renewal notifications
SSL_RENEWAL_REMINDER_EMAIL="admin@example.com"
# Directory for renewal hooks scripts
SSL_HOOKS_DIR="/etc/letsencrypt/renewal-hooks/post"
# Log file for renewal process
SSL_RENEWAL_LOG="/var/log/letsencrypt-renewal.log"

# Cloudflare DNS for wildcard certificates (*.example.com)
USE_CLOUDFLARE_DNS=false
# Cloudflare API token with Zone.Zone:Read and Zone.DNS:Edit permissions
CLOUDFLARE_API_TOKEN="your-cloudflare-api-token"

# =============================================================================
# EMAIL CONFIGURATION (GLOBAL)
# =============================================================================
# Global email configuration used by all components
EMAIL_SENDER="postgres@example.com"
EMAIL_RECIPIENT="admin@example.com"
SMTP_SERVER="smtp.example.com"
SMTP_PORT=587
SMTP_TLS="YES"
SMTP_USERNAME="smtp_user"
SMTP_PASSWORD="smtp_password"

# =============================================================================
# NETDATA MONITORING
# =============================================================================
# Hostname displayed in Netdata UI
NETDATA_HOSTNAME="PostgreSQL Server"
# Username for Netdata web interface
NETDATA_ADMIN_USER="admin"
# Password for Netdata web interface (leave empty for random)
NETDATA_ADMIN_PASSWORD="secure_password"

# =============================================================================
# DYNAMIC OPTIMIZATION & HARDWARE MONITORING
# =============================================================================
# Enable/disable dynamic PostgreSQL optimization
ENABLE_DYNAMIC_OPTIMIZATION=true
# Backup directory for PostgreSQL configurations before optimization
PG_CONFIG_BACKUP_DIR="/var/lib/postgresql/config_backups"
# Optimization report directory
OPTIMIZATION_REPORT_DIR="/var/lib/postgresql/optimization_reports"

# Hardware change detection
ENABLE_HARDWARE_CHANGE_DETECTOR=true
# Hardware specifications file location
HARDWARE_SPECS_FILE="/var/lib/postgresql/hardware_specs.json"
# Production hours (when to use phased optimization)
PRODUCTION_HOURS_START=8
PRODUCTION_HOURS_END=20
# Change threshold percentage for triggering optimization (1-100)
HARDWARE_CHANGE_THRESHOLD=10

# Hardware change email notifications
HARDWARE_CHANGE_EMAIL_ENABLED=true
HARDWARE_CHANGE_EMAIL_RECIPIENT="admin@example.com"
HARDWARE_CHANGE_EMAIL_SENDER="postgres@example.com"
HARDWARE_CHANGE_EMAIL_SUBJECT="[ALERT] Hardware Change Detected on PostgreSQL Server"
OPTIMIZATION_EMAIL_SUBJECT="PostgreSQL Server Optimization Completed"
TEST_EMAIL_SUBJECT="[TEST] PostgreSQL Server Email Test"

# =============================================================================
# BACKUP SYSTEM
# =============================================================================
# Enable/disable automated PostgreSQL backups
ENABLE_BACKUPS=true
# Directory to store backups
BACKUP_DIR="/var/lib/postgresql/backups"

# Retention policy for backups
BACKUP_RETENTION_DAYS=7     # Keep daily backups for 7 days
BACKUP_RETENTION_WEEKS=4    # Keep weekly backups for 4 weeks
BACKUP_RETENTION_MONTHS=12  # Keep monthly backups for 12 months

# Backup compression settings
BACKUP_COMPRESSION=true           # Enable backup compression
BACKUP_COMPRESSION_LEVEL=6        # Compression level (1-9, where 9 is highest compression)

# Backup encryption settings
BACKUP_ENCRYPTION=false           # Enable backup encryption
BACKUP_ENCRYPTION_KEY=""          # Encryption key (leave empty to generate a random key)

# Backup schedule (cron format)
BACKUP_SCHEDULE_FULL="0 1 * * 0"       # Weekly full backup at 1:00 AM on Sunday
BACKUP_SCHEDULE_INCREMENTAL="0 1 * * 1-6"  # Daily incremental backup at 1:00 AM Monday-Saturday
BACKUP_VERIFICATION_SCHEDULE="0 3 * * *"  # Daily verification at 3:00 AM

# Performance settings
BACKUP_MAX_PARALLEL_JOBS=2        # Maximum number of parallel backup jobs
BACKUP_VERIFICATION=true          # Enable backup verification

# Email notification settings
BACKUP_EMAIL_NOTIFICATIONS=true   # Enable email notifications for backups
BACKUP_EMAIL_ON_ERROR_ONLY=false    # When true, only send emails on backup failure
BACKUP_EMAIL_RECIPIENT="admin@example.com"  # Email recipient for backup notifications
BACKUP_EMAIL_SENDER="postgres@example.com"  # Email sender for backup notifications
BACKUP_SUCCESS_EMAIL_SUBJECT="[SUCCESS] PostgreSQL Backup Completed"  # Subject for successful backup emails
BACKUP_FAILURE_EMAIL_SUBJECT="[FAILURE] PostgreSQL Backup Failed"     # Subject for failed backup emails

# =============================================================================
# POSTGRESQL USER MONITORING
# =============================================================================
# Enable/disable PostgreSQL user monitoring for pgbouncer userlist updates
PG_USER_MONITOR_ENABLED=true
# Monitoring interval in seconds (how often to check for user changes)
PG_USER_MONITOR_INTERVAL=30
# Service name for the user monitor systemd service
PG_USER_MONITOR_SERVICE_NAME="pg-user-monitor"
# Log file path for the user monitor service
PG_USER_MONITOR_LOG_PATH="/var/log/pg-user-monitor.log"
# State file path for tracking user changes
PG_USER_MONITOR_STATE_FILE="/var/lib/postgresql/user_monitor_state.json"

# =============================================================================
# DISASTER RECOVERY
# =============================================================================
# Enable/disable disaster recovery system
DISASTER_RECOVERY_ENABLED=true
# Service name for the disaster recovery systemd service
DISASTER_RECOVERY_SERVICE_NAME="disaster-recovery"
# Log file path for the disaster recovery service
DISASTER_RECOVERY_LOG_PATH="/var/log/disaster-recovery.log"
# State file path for tracking recovery events
DISASTER_RECOVERY_STATE_FILE="/var/lib/postgresql/disaster_recovery_state.json"
# Recovery timeout in seconds (maximum time to wait for service recovery)
DISASTER_RECOVERY_TIMEOUT=300
# Check interval in seconds (how often to monitor services)
DISASTER_RECOVERY_CHECK_INTERVAL=30

# Email notifications for disaster recovery
DISASTER_RECOVERY_EMAIL_ENABLED=true
DISASTER_RECOVERY_EMAIL_RECIPIENT="admin@example.com"
DISASTER_RECOVERY_EMAIL_SENDER="postgres@example.com"